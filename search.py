import os
import chromadb
from sentence_transformers import SentenceTransformer

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
CHROMA_DIR = r"C:\Users\kam1k88\GOST1k\chroma_db"
EMBEDDING_MODEL = "intfloat/multilingual-e5-small"
TOP_K = 3  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–∏–∂–∞–π—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

# –û—Ç–∫–ª—é—á–∞–µ–º —Ç–µ–ª–µ–º–µ—Ç—Ä–∏—é Chroma
os.environ["CHROMA_TELEMETRY_ENABLED"] = "false"

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ –∏ –∫–ª–∏–µ–Ω—Ç–∞ ===
embedding_model = SentenceTransformer(EMBEDDING_MODEL, device="cuda")
client = chromadb.PersistentClient(path=CHROMA_DIR)
collection = client.get_or_create_collection("gost1k")

print(f"[‚úì] –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Chroma DB: {CHROMA_DIR}")
print(f"[‚úì] –ö–æ–ª–ª–µ–∫—Ü–∏—è: gost1k (—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∞)\n")

# === –ü–æ–∏—Å–∫–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
def search(query: str, top_k: int = TOP_K, streamlit_output=False):
    print(f"\nüîç –ó–∞–ø—Ä–æ—Å: {query}")

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–∞ –∑–∞–ø—Ä–æ—Å–∞
    q_emb = embedding_model.encode(
        [query],
        normalize_embeddings=True,
        convert_to_numpy=True
    )

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º NumPy ‚Üí list
    q_emb = q_emb.tolist() if hasattr(q_emb, "tolist") else q_emb

    # –ó–∞–ø—Ä–æ—Å –∫ Chroma (–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ–∫—Ç–æ—Ä—ã, –∞ –Ω–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è)
    results = collection.query(
        query_embeddings=q_emb,
        n_results=top_k,
        include=["documents", "metadatas", "embeddings"]
    )

    # === –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ ===
    for i, (doc, meta, emb) in enumerate(
        zip(results["documents"][0], results["metadatas"][0], results["embeddings"][0]),
        1
    ):
        snippet = doc[:200].replace("\n", " ")
        emb_preview = ", ".join([f"{x:.4f}" for x in emb[:6]]) + " ..."
        print(f"\n#{i}. {meta.get('source', '‚Äî')}")
        print(f"   –í–µ–∫—Ç–æ—Ä: [{emb_preview}]")
        print(f"   –¢–µ–∫—Å—Ç: {snippet}...")

    # === Streamlit-–≤—ã–≤–æ–¥ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è) ===
    if streamlit_output:
        import streamlit as st
        st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")
        for i, (doc, meta, emb) in enumerate(
            zip(results["documents"][0], results["metadatas"][0], results["embeddings"][0]),
            1
        ):
            emb_preview = ", ".join([f"{x:.4f}" for x in emb[:6]]) + " ..."
            st.markdown(f"**{i}. {meta.get('source', '‚Äî')}**")
            st.caption(f"–í–µ–∫—Ç–æ—Ä: [{emb_preview}]")
            st.write(doc[:600] + "...")

# === –ü—Ä–∏–º–µ—Ä —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ ===
if __name__ == "__main__":
    search("—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∑–∞—â–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
